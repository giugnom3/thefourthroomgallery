{"version":3,"sources":["virtual-gallery/gallery.js","App.js","index.js"],"names":["artworksByRoom","color","bw","death","sculpture","wallArtworkByRoom","SculptureStack","_ref4","stack","currentIndex","setCurrentIndex","useState","React","createElement","style","position","border","borderRadius","overflow","src","alt","width","maxHeight","objectFit","padding","fontSize","length","Fragment","onClick","Math","max","top","left","backgroundColor","cursor","min","right","GalleryScene","mountRef","useRef","joystickRef","infoBox","setInfoBox","zoomedObject","setZoomedObject","selectedRoom","setSelectedRoom","darkMode","setDarkMode","showInstructions","setShowInstructions","camera","useEffect","mount","current","scene","THREE","currentCamera","window","innerWidth","innerHeight","set","lookAt","up","renderer","antialias","setSize","setPixelRatio","devicePixelRatio","appendChild","domElement","ambientLight","skylight","add","loader","wallMaterial","frameMaterial","woodTexture","load","process","wrapS","wrapT","repeat","themes","name","path","runningX","forEach","theme","calculatedWidth","roomWidth","children","filter","obj","remove","firstTheme","firstWall","rotation","y","PI","lastTheme","lastWall","i","console","log","nextTheme","dividerX","z","rightWall","leftWall","spotlight","spotlight2","_ref","x","wallOffset","floorWidth","floor","map","FontLoader","font","textGeometry","TextGeometry","toUpperCase","size","height","curveSegments","textMaterial","textMesh","backWall","images","total","startX","spacing","img","posX","posZ","tex","frame","renderOrder","mesh","transparent","depthWrite","depthTest","side","opacity","userData","title","author","location","year","isArtwork","group","target","raycaster","pointer","addEventListener","event","clientX","clientY","setFromCamera","hover","intersectObjects","find","object","scale","child","type","_obj$userData","clicked","_obj$object$userData","controls","OrbitControls","enableZoom","enableRotate","enablePan","joystickManager","nipplejs","create","zone","mode","bottom","moveDirection","on","evt","data","direction","angle","radian","speed","cos","sin","animate","requestAnimationFrame","lerp","render","handleResize","aspect","updateProjectionMatrix","firstChild","removeChild","removeEventListener","destroy","filteredRooms","Object","entries","textAlign","marginTop","fontWeight","fontFamily","borderBottom","className","margin","boxShadow","ref","transform","zIndex","marginBottom","originalScale","copy","originalPosition","maxWidth","lineHeight","paddingLeft","display","justifyContent","alignItems","flexWrap","gap","value","onChange","e","keys","room","key","charAt","slice","_ref2","gridTemplateColumns","reduce","acc","base","split","push","_ref3","index","imgName","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.44c2e6a1.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport nipplejs from 'nipplejs';\r\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\r\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\r\n\r\n\r\nconst artworksByRoom = {\r\n  color: ['color1.jpeg', 'color2.jpeg', 'color3.png', 'color4.jpeg', 'color5.jpeg'],\r\n  bw: ['bw1_A.jpeg', 'bw1_B.jpeg', 'bw2.png'],\r\n  death: ['death1.jpeg', 'death2.png', 'death3.jpeg', 'death4.jpeg', 'death5.jpeg', 'death6.jpeg', 'death7.jpeg'],\r\n  sculpture: [\r\n    'sculpture1_A.png', 'sculpture1_B.png', 'sculpture1_C.png',\r\n    'sculpture2_A.jpeg', 'sculpture2_B.jpeg',\r\n    'sculpture3_A.jpeg', 'sculpture3_B.jpeg',\r\n    'sculpture4_A.jpeg', 'sculpture4_B.jpeg',\r\n    'sculpture5_A.png', 'sculpture5_B.png',\r\n    'sculpture6_A.jpeg', 'sculpture6_B.jpeg',\r\n    'sculpture7_A.jpeg', 'sculpture7_B.jpeg'\r\n  ]\r\n};\r\n\r\nconst wallArtworkByRoom = {\r\n  // entrance: ['exhibit1.png', 'exhibit2.png'],\r\n  color: ['color1.jpeg', 'color2.jpeg', 'color3.png', 'color4.jpeg', 'color5.jpeg'],\r\n  bw: ['bw1_A.jpeg', 'bw1_B.jpeg', 'bw2.png'],\r\n  death: ['death1.jpeg', 'death2.png', 'death3.jpeg', 'death4.jpeg', 'death5.jpeg', 'death6.jpeg', 'death7.jpeg'],\r\n  sculpture: [\r\n    'sculpture1_B.png','sculpture2_B.jpeg',\r\n    'sculpture3_A.jpeg','sculpture4_A.jpeg', 'sculpture5_A.png', \r\n    'sculpture6_A.jpeg', 'sculpture7_B.jpeg'\r\n  ]\r\n};\r\n\r\n// const roomPositions = {\r\n//   all: new THREE.Vector3(0, 5, 70),\r\n//   color: new THREE.Vector3(0, 5, 70),\r\n//   bw: new THREE.Vector3(40, 5, 70),\r\n//   sculpture: new THREE.Vector3(80, 5, 70),\r\n//   death: new THREE.Vector3(120, 5, 70)\r\n// };\r\n\r\nconst GalleryScene = () => {\r\n  const mountRef = useRef(null);\r\n  const joystickRef = useRef(null);\r\n  const [infoBox, setInfoBox] = useState(null);\r\n  const [zoomedObject, setZoomedObject] = useState(null);\r\n  const [selectedRoom, setSelectedRoom] = useState('all');\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [showInstructions, setShowInstructions] = useState(false);\r\n\r\n\r\n\r\n  const camera = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const mount = mountRef.current;\r\n    const scene = new THREE.Scene();\r\n    const currentCamera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.current = currentCamera;\r\n    //camera.current.position.set(0, 4, 20);\r\n    camera.current.position.set(60, 5, 100); \r\n    camera.current.lookAt(new THREE.Vector3(60, 5, 0)); \r\n    camera.current.up.set(0,1,0);\r\n\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    mount.appendChild(renderer.domElement);\r\n\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\r\n    const skylight = new THREE.DirectionalLight(0xffffff, 0.9);\r\n    skylight.position.set(0, 50, 50);\r\n    scene.add(ambientLight, skylight);\r\n\r\n    const loader = new THREE.TextureLoader();\r\n    const wallMaterial = new THREE.MeshStandardMaterial({ color: '#E6E1D3' });\r\n    const frameMaterial = new THREE.MeshBasicMaterial({ color: '#222' });\r\n    const woodTexture = loader.load(process.env.PUBLIC_URL + '/assets/icons/wood-floor.png');\r\n    woodTexture.wrapS = THREE.RepeatWrapping;\r\n    woodTexture.wrapT = THREE.RepeatWrapping;\r\n    woodTexture.repeat.set(12, 12);\r\n    \r\n    const artworkWidth = 4;\r\n    const artworkSpacing = 2;\r\n    const roomPadding = 0;\r\n    const minRoomWidth = 40;\r\n\r\n    const themes = [\r\n      { name: 'Color', path: 'color', color: '#d0e4f0', position: [0, 0, 0] },\r\n      { name: 'Black & White', path: 'bw', color: '#f6f6f6', position: [0, 0, 0] },\r\n      { name: 'Sculpture', path: 'sculpture', color: '#e8dff4', position: [0, 0, 0] },\r\n      { name: 'Death', path: 'death', color: '#f2dede', position: [0, 0, 0] }\r\n    ];\r\n\r\n    let runningX = 0; // Starting position for the first room\r\n    themes.forEach(theme => {\r\n      const artworksInRoom = wallArtworkByRoom[theme.path] || [];\r\n      const numArtworks = artworksInRoom.length;\r\n      const calculatedWidth = (artworkWidth + artworkSpacing) * numArtworks + roomPadding;\r\n      const roomWidth = Math.max(calculatedWidth, minRoomWidth);\r\n\r\n      theme.roomWidth = roomWidth;\r\n      theme.position = [runningX, 0, 0];\r\n\r\n      runningX += roomWidth;\r\n    });\r\n         \r\n        scene.children\r\n        .filter(obj => obj.name === 'dividerWall')\r\n        .forEach(obj => scene.remove(obj));\r\n\r\n        if (selectedRoom === 'all') {\r\n          // First wall (before the first room)\r\n          const firstTheme = themes[0];\r\n          const firstWall = new THREE.Mesh(\r\n            new THREE.PlaneGeometry(70, 10),\r\n            wallMaterial\r\n          );\r\n          firstWall.rotation.y = Math.PI / 2;\r\n          firstWall.position.set(firstTheme.position[0] - firstTheme.roomWidth / 2, 5, -15);\r\n          scene.add(firstWall);\r\n\r\n          // Last wall (after the last room)\r\n          const lastTheme = themes[themes.length - 1];\r\n          const lastWall = new THREE.Mesh(\r\n            new THREE.PlaneGeometry(70, 10),\r\n            wallMaterial\r\n          );\r\n          lastWall.rotation.y = -Math.PI / 2;\r\n          lastWall.position.set(lastTheme.position[0] + lastTheme.roomWidth / 2, 5, -15);\r\n          scene.add(lastWall);\r\n          // for (let i = 0; i < themes.length - 1; i++) {\r\n          //   const x1 = themes[i].position[0];\r\n          //   const x2 = themes[i + 1].position[0];\r\n          //   const midpointX = (x1 + x2) / 2;\r\n          //   const z = themes[i].position[2];\r\n\r\n          //   const dividerWall = new THREE.Mesh(\r\n          //     new THREE.PlaneGeometry(1, 10),\r\n          //     wallMaterial\r\n          //   );\r\n          //   dividerWall.name = 'dividerWall'; \r\n          //   dividerWall.position.set(midpointX, 5, z - 15.01);\r\n          //   scene.add(dividerWall);\r\n          // }\r\n\r\n          for (let i = 0; i < themes.length - 1; i++) {\r\n            const theme = themes[i];\r\n            console.log(themes.length);\r\n            console.log('looping through index: ', i);\r\n            console.log('theme', theme);\r\n            const nextTheme = themes[i + 1];\r\n            console.log('nextTheme', nextTheme);\r\n            \r\n            const dividerX = (theme.position[0] + theme.roomWidth / 2 + nextTheme.position[0] - nextTheme.roomWidth / 2) / 2;\r\n            console.log('dividerX', dividerX);\r\n            // const z = theme.position[2];\r\n            const z = 0; // Adjust this value as needed for the z position\r\n\r\n            // roomPositions[theme.path] = new THREE.Vector3(dividerX, 0, 0); // Update the room position for the current theme\r\n          \r\n            // const dividerWall = new THREE.Mesh(\r\n            //   new THREE.PlaneGeometry(50, 10),\r\n            //   wallMaterial\r\n            // );\r\n\r\n            const rightWall = new THREE.Mesh(\r\n              new THREE.PlaneGeometry(70, 10), \r\n              wallMaterial);\r\n            rightWall.rotation.y = -Math.PI / 2;\r\n            rightWall.position.set(dividerX - 0.5, 5, z - 15);\r\n            console.log('rightWall', rightWall);\r\n            scene.add(rightWall);\r\n    \r\n            const leftWall = new THREE.Mesh(\r\n              new THREE.PlaneGeometry(70, 10), \r\n              wallMaterial);\r\n            leftWall.rotation.y = Math.PI / 2;\r\n            leftWall.position.set(dividerX + 0.5, 5, z - 15); \r\n            scene.add(leftWall);\r\n\r\n            // console.log('dividerWall', dividerWall);\r\n            // dividerWall.name = 'dividerWall';\r\n            // dividerWall.rotation.y = Math.PI / 2;\r\n            // dividerWall.position.set(dividerX, 5, z - 15.01);\r\n            // scene.add(dividerWall);\r\n            const spotlight = new THREE.SpotLight(new THREE.Color(0xffffff), 5, 10, Math.PI / 4, 0.3);\r\n            \r\n            switch (i) {\r\n              default: {\r\n                console.log('default case', theme.position[0], z - 5);\r\n                break;\r\n              }\r\n              case 0: {\r\n                console.log('case 0', theme.position[0], z - 5);\r\n                spotlight.position.set(dividerX / 2, 5, z - 5);\r\n                // spotlight.position.set(x, 13, z - 15);\r\n                // spotlight.castShadow = true;\r\n                // spotlight.angle = Math.PI / 4;\r\n                spotlight.add(new THREE.SpotLightHelper(spotlight)) \r\n                scene.add(spotlight);\r\n                // spotlight.target.position.set(x, 5, z - 5);\r\n                // scene.add(spotlight.target);\r\n                break;\r\n              }\r\n              case 1: {\r\n                console.log('case 1', dividerX / 2, z - 5);\r\n                spotlight.position.set(dividerX / 2, 5, z - 5);\r\n                // spotlight.position.set(x, 13, z - 15);\r\n                // spotlight.castShadow = true;\r\n                // spotlight.angle = Math.PI / 4;\r\n                spotlight.add(new THREE.SpotLightHelper(spotlight)) \r\n                scene.add(spotlight);\r\n                // spotlight.target.position.set(x, 5, z - 5);\r\n                // scene.add(spotlight.target);\r\n                break;\r\n              }\r\n              case 2: {\r\n                console.log('case 2', dividerX / 2, z - 5);\r\n                spotlight.position.set(dividerX / 2, 5, z - 5);\r\n                // spotlight.position.set(x, 13, z - 15);\r\n                // spotlight.castShadow = true;\r\n                // spotlight.angle = Math.PI / 4;\r\n                spotlight.add(new THREE.SpotLightHelper(spotlight)) \r\n                scene.add(spotlight);\r\n                // spotlight.target.position.set(x, 5, z - 5);\r\n                // scene.add(spotlight.target);\r\n                const spotlight2 = new THREE.SpotLight(new THREE.Color(0xffffff), 5, 10, Math.PI / 4, 0.3);\r\n                spotlight2.position.set(72, 5, z - 5);\r\n                spotlight2.add(new THREE.SpotLightHelper(spotlight2)) \r\n                scene.add(spotlight2);\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n    themes.forEach(({ name, path, color, position, roomWidth }) => {\r\n      console.log(themes);\r\n      // console.log(path);\r\n      // console.log(position);\r\n      const [x, z] = position;\r\n      // const roomWidth = (path === 'sculpture' || path === 'death') ? 55 : 28;\r\n      const wallOffset = roomWidth / 2;\r\n      const showRoom = selectedRoom === 'all' || selectedRoom === path;\r\n      if (!showRoom) return;\r\n      \r\n    \r\n      const floorWidth = roomWidth + 4;\r\n      const floor = new THREE.Mesh(\r\n        new THREE.PlaneGeometry(floorWidth, 36), \r\n        new THREE.MeshStandardMaterial({ map: woodTexture })\r\n      );\r\n\r\n      floor.rotation.x = -Math.PI / 2;\r\n      floor.position.set(x, 0, z);\r\n      scene.add(floor);\r\n\r\n      const fontLoader = new FontLoader();\r\n\r\n      fontLoader.load('/fonts/helvetiker_regular.typeface.json', (font) => {\r\n        const textGeometry = new TextGeometry(name.toUpperCase(), {\r\n          font: font,\r\n          size: 1.2,\r\n          height: 0.1,\r\n          curveSegments: 12,\r\n        });\r\n\r\n        const textMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });\r\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\r\n        textMesh.position.set(x - name.length * 0.3, 10.5, z - 14.5);\r\n        scene.add(textMesh);\r\n      });\r\n\r\n\r\n      const backWall = new THREE.Mesh(\r\n        new THREE.PlaneGeometry(roomWidth + 4, 10), \r\n        wallMaterial);\r\n      backWall.position.set(x, 5, z - 15);\r\n      scene.add(backWall);\r\n\r\n      // const spotlight = new THREE.SpotLight(new THREE.Color(0xffffff), 5, 10, Math.PI / 4, 0.3);\r\n      // spotlight.position.set(x, 5, z - 5);\r\n      // spotlight.position.set(x, 13, z - 15);\r\n      // spotlight.castShadow = true;\r\n      // spotlight.angle = Math.PI / 4;\r\n      // spotlight.add(new THREE.SpotLightHelper(spotlight)) \r\n      // scene.add(spotlight);\r\n      // spotlight.target.position.set(x, 5, z - 5);\r\n      // scene.add(spotlight.target);\r\n\r\n      if (selectedRoom !== 'all') {\r\n        const backWall = new THREE.Mesh(\r\n          new THREE.PlaneGeometry(roomWidth, 10), \r\n          wallMaterial);\r\n        backWall.position.set(x, 5, z - 15);\r\n        scene.add(backWall);\r\n\r\n        const rightWall = new THREE.Mesh(\r\n          new THREE.PlaneGeometry(30, 10), \r\n          wallMaterial);\r\n        rightWall.rotation.y = -Math.PI / 2;\r\n        rightWall.position.set(x + wallOffset, 5, z - 15); \r\n        scene.add(rightWall);\r\n\r\n        const leftWall = new THREE.Mesh(\r\n          new THREE.PlaneGeometry(30, 10), \r\n          wallMaterial);\r\n        leftWall.rotation.y = Math.PI / 2;\r\n        leftWall.position.set(x - wallOffset, 5, z - 15); \r\n        scene.add(leftWall);\r\n      }\r\n\r\n      const images = wallArtworkByRoom[path];\r\n      const total = images.length;\r\n      const spacing = 5.2;\r\n      const startX = x - (total * spacing) / 2 + spacing /2;\r\n\r\n      images.forEach((img, i) => {\r\n        const posX = startX + i * spacing;\r\n        const posZ = z - 10;\r\n        const tex = loader.load(`assets/${path}/${img}`);\r\n\r\n        const frame = new THREE.Mesh(\r\n          new THREE.PlaneGeometry(4.2, 4.2), \r\n          frameMaterial\r\n        );\r\n        frame.renderOrder = 0;\r\n        frame.position.z = -0.01;\r\n      \r\n        const mesh = new THREE.Mesh(\r\n          new THREE.PlaneGeometry(4, 4),\r\n          new THREE.MeshStandardMaterial({\r\n            map: tex,\r\n            transparent: false,\r\n            depthWrite: true,\r\n            depthTest: true,\r\n            side: THREE.FrontSide,\r\n            opacity: 1\r\n          })\r\n        );\r\n        \r\n        mesh.renderOrder = 1;\r\n        mesh.position.z = 0;\r\n\r\n        mesh.userData = {\r\n          title: img,\r\n          author: 'Unknown',\r\n          location: 'SCSU Art Gallery',\r\n          year: '2025',\r\n          isArtwork: true    \r\n        };\r\n       \r\n        const group = new THREE.Group();\r\n        group.add(frame);\r\n        group.add(mesh);\r\n        group.position.set(posX, 5, posZ);\r\n        scene.add(group);\r\n\r\n        const spotlight = new THREE.SpotLight(0xffffff, 1.5, 12, Math.PI / 6, 0.2);\r\n        spotlight.position.set(posX, 9, posZ); // Above the image\r\n        spotlight.target = group;\r\n        scene.add(spotlight);\r\n        scene.add(spotlight.target);\r\n        \r\n      });\r\n    })\r\n\r\n        const raycaster = new THREE.Raycaster();\r\n        const pointer = new THREE.Vector2();\r\n\r\n        mount.addEventListener('mousemove', (event) => {\r\n\r\n          pointer.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n          pointer.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n          raycaster.setFromCamera(pointer, camera.current);\r\n        \r\n          const intersects = raycaster.intersectObjects(scene.children, true);\r\n          const hover = intersects.find(obj => obj.object.userData && obj.object.userData.isArtwork);\r\n        \r\n          if (hover) {\r\n            mount.style.cursor = 'pointer';\r\n            hover.object.scale.set(1.05, 1.05, 1.05); \r\n\r\n          } else {\r\n            mount.style.cursor = 'default';\r\n            scene.children.forEach(child => {\r\n              if (child.type === 'Group') {\r\n                child.children.forEach(obj => {\r\n                  if (obj.userData?.isArtwork) {\r\n                    obj.scale.set(1, 1, 1);\r\n                  }\r\n                });\r\n              }\r\n            }); \r\n          }\r\n        });\r\n          \r\n\r\n        mount.addEventListener('click', (event) => {\r\n          pointer.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n          pointer.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n          \r\n          raycaster.setFromCamera(pointer, camera.current);\r\n        \r\n          const intersects = raycaster.intersectObjects(scene.children, true);\r\n          const clicked = intersects.find(obj => obj.object.userData?.isArtwork);\r\n        \r\n          if (clicked) {\r\n            setInfoBox(clicked.object.userData); // this works now\r\n            setZoomedObject(null);\r\n          }          \r\n        });\r\n    \r\n    const controls = new OrbitControls(camera.current, renderer.domElement);\r\n    controls.enableZoom = false;\r\n    controls.enableRotate = false;\r\n    controls.enablePan = false;\r\n\r\n    const joystickManager = nipplejs.create({\r\n      zone: joystickRef.current,\r\n      mode: 'static',\r\n      position: { right: '40px', bottom: '20px' },\r\n      color: '#0165FC',\r\n      size: 80\r\n    });\r\n    \r\n    let moveDirection = { x: 0, z: 0 };\r\n    joystickManager.on('move', (evt, data) => {\r\n      if (data.direction) {\r\n        const angle = data.angle.radian;\r\n        const speed = 0.20; \r\n        moveDirection.x = Math.cos(angle) * speed;  \r\n        moveDirection.z = -Math.sin(angle) * speed;\r\n      }\r\n    });\r\n    \r\n    joystickManager.on('end', () => moveDirection = { x: 0, z: 0 });\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      if (!zoomedObject) {\r\n        camera.current.position.x += moveDirection.x;\r\n        camera.current.position.z += moveDirection.z;\r\n      } else {\r\n        const { x, y, z } = zoomedObject.position;\r\n        camera.current.position.lerp(new THREE.Vector3(x, y, z + 50), 0.5);\r\n        camera.current.lookAt(zoomedObject.position);\r\n      }\r\n\r\n      renderer.render(scene, camera.current);\r\n    };\r\n    animate();\r\n\r\n    const handleResize = () => {\r\n      camera.current.aspect = window.innerWidth / window.innerHeight;\r\n      camera.current.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      while (mount.firstChild) {\r\n        mount.removeChild(mount.firstChild); \r\n      }\r\n      window.removeEventListener('resize', handleResize);\r\n      joystickManager.destroy(); \r\n    };\r\n    \r\n  }, [selectedRoom, darkMode, zoomedObject]);\r\n\r\n  const filteredRooms = selectedRoom === 'all'\r\n  ? Object.entries(artworksByRoom)\r\n  : [[selectedRoom, artworksByRoom[selectedRoom]]];\r\n\r\n  \r\n  return (\r\n    <>\r\n    <header style={{\r\n      textAlign: 'center',\r\n      fontSize: '2.5rem',\r\n      marginTop: '1rem',\r\n      padding: '1rem',\r\n      fontWeight: 'bold',\r\n      fontFamily: 'Poppins, sans-serif',\r\n      backgroundColor: darkMode ? '#121212' : '#f0f0f0',\r\n      color: darkMode ? '#fff' : '#222',\r\n      borderBottom: darkMode ? '1px solid #444' : '1px solid #ccc'\r\n    }}>\r\n      ✨ Welcome to the Fourth Room Gallery 🎨\r\n    </header>\r\n\r\n    <main className=\"font-poppins\" style={{ backgroundColor: darkMode ? '#121212' : '#fff', color: darkMode ? '#fff' : '#000' }}>\r\n      <div style={{ border: '2px solid #ccc', borderRadius: '12px', overflow: 'hidden', margin: '2rem', boxShadow: '0 2px 10px rgba(0,0,0,0.1)' }}>\r\n        <div style={{ position: 'relative', height: '60vh' }}>\r\n          <div ref={mountRef} style={{ width: '100%', height: '100%' }} />\r\n          <div ref={joystickRef} style={{ position: 'absolute', right: '80%', bottom: '20px', transform: 'translateX(-50%)', width: 100, height: 100, zIndex: 1000 }} />\r\n        </div>\r\n      </div>\r\n\r\n      {infoBox && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)', \r\n          // position: 'absolute', \r\n          // top: '20px', \r\n          // right: '20px', \r\n          backgroundColor: '#222', \r\n          color: '#fff', \r\n          padding: '20px', \r\n          borderRadius: '12px', \r\n          zIndex: 1001, \r\n          boxShadow: '0 4px 20px rgba(0,0,0,0.4)' }}>\r\n          <h3 style={{ marginBottom: '10px' }}>🖼️ {infoBox.title}</h3>\r\n          <p>👤 <strong>Author:</strong> {infoBox.author}</p>\r\n          <p>📍 <strong>Location:</strong> {infoBox.location}</p>\r\n          <p>📅 <strong>Year:</strong> {infoBox.year}</p>\r\n          <button\r\n  onClick={() => {\r\n    if (zoomedObject) {\r\n  if (zoomedObject.userData.originalScale) {\r\n    zoomedObject.scale.copy(zoomedObject.userData.originalScale);\r\n  }\r\n  if (zoomedObject.userData.originalPosition) {\r\n    zoomedObject.position.copy(zoomedObject.userData.originalPosition);\r\n  }\r\n}\r\nsetZoomedObject(null);\r\nsetInfoBox(null);\r\n\r\n  }}\r\n  style={{\r\n    marginTop: '10px',\r\n    backgroundColor: '#4caf50',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '8px 16px',\r\n    borderRadius: '6px',\r\n    cursor: 'pointer'\r\n  }}\r\n>\r\n  Close\r\n</button>\r\n\r\n        </div>\r\n      )}\r\n          \r\n{showInstructions && (\r\n  <div style={{\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: '#222',\r\n    color: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '12px',\r\n    zIndex: 1001,\r\n    boxShadow: '0 4px 20px rgba(0,0,0,0.4)',\r\n    maxWidth: '300px',\r\n    fontSize: '0.95rem',\r\n    lineHeight: '1.5'\r\n  }}>\r\n    <h3 style={{ marginBottom: '10px' }}>ℹ️ Gallery Instructions</h3>\r\n    <ul style={{ paddingLeft: '1rem' }}>\r\n      <li>🕹️ Use the <strong>joystick</strong> to walk around the 3D gallery.</li>\r\n      <li>📂 The <strong>dropdown</strong> filters both the virtual gallery and the photo grid below.</li>\r\n      <li>🚪 The <strong>room buttons</strong> will navigate to a room but if it doesn't center on the screen use the joystick to adjust.</li>\r\n      <li>🖼️ <strong>First, zoom in on any artwork</strong>then click to view details.</li>\r\n      <li>💡 If you get stuck in a room or in zoom, <strong>refresh</strong> the browser.</li>\r\n      <li>❌ Use the <strong>Close</strong> button to exit zoom view.</li>\r\n    </ul>\r\n    <button\r\n      onClick={() => setShowInstructions(false)}\r\n      style={{\r\n        marginTop: '10px',\r\n        backgroundColor: '#4caf50',\r\n        color: '#fff',\r\n        border: 'none',\r\n        padding: '8px 16px',\r\n        borderRadius: '6px',\r\n        cursor: 'pointer'\r\n      }}\r\n    >\r\n      Got it!\r\n    </button>\r\n  </div>\r\n)}\r\n\r\n    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '1rem 2rem', alignItems: 'center', flexWrap: 'wrap', gap: '1rem' }}>\r\n    <select value={selectedRoom} onChange={(e) => setSelectedRoom(e.target.value)} style={{ padding: '0.5rem', fontSize: '1rem' }}>\r\n    {/* <select \r\n      value={selectedRoom} \r\n      onChange={(e) => {\r\n        setSelectedRoom(e.target.value);  // Update the selected room state\r\n        const room = e.target.value; // Get the selected room value\r\n        console.log('Selected room:', room); // Log the selected room value\r\n        switch (room) {\r\n          case 'all':\r\n            camera.current.position.set(0, 5, 70);  \r\n            camera.current.lookAt(new THREE.Vector3(0, 5, 70));\r\n            break;\r\n          case 'color':\r\n            camera.current.position.set(0, 5, 70);  \r\n            camera.current.lookAt(new THREE.Vector3(0, 5, 70));\r\n            break;\r\n          case 'bw':\r\n            camera.current.position.set(40, 5, 70);  \r\n            camera.current.lookAt(new THREE.Vector3(40, 5, 70));\r\n            break;\r\n          case 'sculpture':\r\n            camera.current.position.set(80, 5, 70);  \r\n            camera.current.lookAt(new THREE.Vector3(80, 5, 70));\r\n            break;\r\n          case 'death':\r\n            camera.current.position.set(120, 5, 70);  \r\n            camera.current.lookAt(new THREE.Vector3(120, 5, 70));\r\n            break;\r\n          default:\r\n            camera.current.position.set(0, 5, 70);  \r\n            camera.current.lookAt(new THREE.Vector3(0, 5, 70));\r\n        }\r\n      }} \r\n      style={{ padding: '0.5rem', fontSize: '1rem' }}> */}\r\n    <option value=\"all\">All Rooms</option>\r\n    {Object.keys(artworksByRoom).map(room => (\r\n      <option key={room} value={room}>{room.charAt(0).toUpperCase() + room.slice(1)}</option>\r\n    ))}\r\n  </select>\r\n\r\n          <div style={{ display: 'flex', gap: '0.75rem' }}>\r\n            <button\r\n              onClick={() => setShowInstructions(true)}\r\n              className=\"font-poppins bg-green-600 text-white px-4 py-2 rounded-md\"\r\n              style={{\r\n                backgroundColor: '#4caf50',\r\n                color: '#fff',\r\n                border: 'none',\r\n                padding: '8px 16px',\r\n                borderRadius: '6px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              📋 Instructions\r\n            </button>\r\n\r\n            <button\r\n            onClick={() => {\r\n              console.log(selectedRoom);\r\n              const room = selectedRoom;\r\n              switch (room) {\r\n                case 'all':\r\n                  camera.current.position.set(0, 5, 100);  \r\n                  camera.current.lookAt(new THREE.Vector3(0, 5, 100));\r\n                  break;\r\n                case 'color':\r\n                  camera.current.position.set(0, 5, 70);  \r\n                  camera.current.lookAt(new THREE.Vector3(0, 5, 70));\r\n                  break;\r\n                case 'bw':\r\n                  camera.current.position.set(40, 5, 70);  \r\n                  camera.current.lookAt(new THREE.Vector3(40, 5, 70));\r\n                  break;\r\n                case 'sculpture':\r\n                  camera.current.position.set(80, 5, 70);  \r\n                  camera.current.lookAt(new THREE.Vector3(80, 5, 70));\r\n                  break;\r\n                case 'death':\r\n                  camera.current.position.set(120, 5, 70);  \r\n                  camera.current.lookAt(new THREE.Vector3(120, 5, 70));\r\n                  break;\r\n                default:\r\n                  camera.current.position.set(0, 5, 70);  \r\n                  camera.current.lookAt(new THREE.Vector3(0, 5, 70));\r\n              }  \r\n            }}\r\n            style={{\r\n              backgroundColor: '#4caf50',\r\n              color: '#fff',\r\n              border: 'none',\r\n              padding: '8px 16px',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            🧭 Recenter View\r\n          </button>\r\n\r\n            <button\r\n              onClick={() => setDarkMode(!darkMode)}\r\n              style={{\r\n                padding: '0.5rem 1rem',\r\n                fontSize: '1rem',\r\n                backgroundColor: darkMode ? '#333' : '#eee',\r\n                color: darkMode ? '#fff' : '#000',\r\n                border: '1px solid #aaa',\r\n                borderRadius: '6px'\r\n              }}\r\n            >\r\n              {darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'}\r\n            </button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', gap: '1rem', padding: '0 2rem' }}>\r\n      {Object.keys(artworksByRoom).map((room) => (\r\n        <button\r\n          key={room}\r\n          onClick={() => {\r\n            console.log('Selected room:', room);\r\n            // setSelectedRoom(room);\r\n            // const pos = roomPositions[room];\r\n\r\n            switch (room) {\r\n              case 'all':\r\n                camera.current.position.set(0, 5, 20);  \r\n                camera.current.lookAt(new THREE.Vector3(0, 0, 10));\r\n                break;\r\n              case 'color':\r\n                camera.current.position.set(0, 5, 30);\r\n                camera.current.lookAt(new THREE.Vector3(0, 0, 10));\r\n                break;\r\n              case 'bw':\r\n                camera.current.position.set(40, 5, 30);  \r\n                camera.current.lookAt(new THREE.Vector3(40, 0, 10));\r\n                break;\r\n              case 'sculpture':\r\n                camera.current.position.set(80, 5, 30);  \r\n                camera.current.lookAt(new THREE.Vector3(80, 0, 10));\r\n                break;\r\n              case 'death':\r\n                camera.current.position.set(120, 5, 30);  \r\n                camera.current.lookAt(new THREE.Vector3(120, 0, 10));\r\n                break;\r\n              default:\r\n                camera.current.position.set(0, 5, 30);  \r\n                camera.current.lookAt(new THREE.Vector3(0, 5, 10));\r\n            }  \r\n\r\n            // if (camera.current && pos) {\r\n            //   camera.current.position.copy(pos.clone().add(new THREE.Vector3(0, 4, 30)));\r\n            //   camera.current.lookAt(pos);\r\n            // }\r\n          }}\r\n          title={room}\r\n          style={{\r\n            backgroundColor: darkMode ? '#333' : '#e0e0e0',\r\n            color: darkMode ? '#fff' : '#000',\r\n            border: '1px solid #aaa',\r\n            borderRadius: '10px',\r\n            padding: '0.5rem 1rem',\r\n            fontSize: '1rem',\r\n            cursor: 'pointer',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '0.5rem'\r\n          }}\r\n        >\r\n          {room === 'color' && '🎨'}\r\n          {room === 'bw' && '🖤'}\r\n          {room === 'sculpture' && '🗿'}\r\n          {room === 'death' && '💀'}\r\n          {room.charAt(0).toUpperCase() + room.slice(1)}\r\n        </button>\r\n      ))}\r\n    </div>\r\n\r\n\r\n      <section style={{ padding: '2rem', backgroundColor: darkMode ? '#1c1c1c' : '#fafafa' }}>\r\n      {filteredRooms.map(([room, images]) => (\r\n    <div key={room} style={{ marginTop: '2rem' }}>\r\n      <h3 style={{ fontSize: '1.5rem', marginBottom: '1rem' }}>{room.charAt(0).toUpperCase() + room.slice(1)}</h3>\r\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', gap: '1.5rem' }}>\r\n        {room === 'sculpture'\r\n          ? Object.entries(images.reduce((acc, img) => {\r\n              const base = img.split('_')[0];\r\n              if (!acc[base]) acc[base] = [];\r\n              acc[base].push(img);\r\n              return acc;\r\n            }, {}))\r\n            .map(([base, stack], index) => (\r\n              <SculptureStack key={index} stack={stack} />\r\n            ))\r\n            \r\n          : images.map((imgName) => (\r\n              <div key={imgName} style={{ border: '1px solid #ccc', borderRadius: '8px', overflow: 'hidden' }}>\r\n                <img src={`assets/${room}/${imgName}`} alt={imgName} style={{ width: '100%', maxHeight: '200px' }} />\r\n                <p style={{ padding: '0.5rem', fontSize: '0.9rem' }}>{imgName}</p>\r\n              </div>\r\n            ))}\r\n      </div>\r\n    </div>\r\n  ))}\r\n</section>\r\n    </main>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SculptureStack = ({ stack }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  return (\r\n    <div style={{ position: 'relative', border: '1px solid #ccc', borderRadius: '8px', overflow: 'hidden',}}>\r\n      <img\r\n        src={`assets/sculpture/${stack[currentIndex]}`}\r\n        alt={stack[currentIndex]}\r\n        style={{ width: '100%', maxHeight: '200px',  objectFit: 'cover' }}\r\n      />\r\n      <p style={{ padding: '0.5rem', fontSize: '0.9rem' }}>{stack[currentIndex]}</p>\r\n      {stack.length > 1 && (\r\n        <>\r\n          <button\r\n            onClick={() => setCurrentIndex(Math.max(currentIndex - 1, 0))}\r\n            style={{\r\n              position: 'absolute',\r\n              top: '10px',\r\n              left: '10px',\r\n              backgroundColor: currentIndex === 0 ? '#aaa' : '#4caf50',\r\n              color: '#fff',\r\n              border: 'none',\r\n              padding: '0.25rem 0.5rem',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            ◀\r\n          </button>\r\n          <button\r\n            onClick={() => setCurrentIndex(Math.min(currentIndex + 1, stack.length - 1))}\r\n            style={{\r\n              position: 'absolute',\r\n              top: '10px',\r\n              right: '10px',\r\n              backgroundColor: currentIndex === stack.length - 1 ? '#aaa' : '#4caf50',\r\n              color: '#fff',\r\n              border: 'none',\r\n              padding: '0.25rem 0.5rem',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            ▶\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  \r\n  );\r\n};\r\n\r\n\r\nexport default GalleryScene;\r\n","import React from 'react';\nimport GalleryScene from './virtual-gallery/gallery';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GalleryScene />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}